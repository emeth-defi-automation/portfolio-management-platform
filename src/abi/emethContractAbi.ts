export const emethContractAbi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "actionIds",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addActionExternal",
    inputs: [
      { name: "actionId", type: "uint256", internalType: "uint256" },
      { name: "_contractAddress", type: "address", internalType: "address" },
      {
        name: "tokensAmounts",
        type: "tuple[]",
        internalType: "struct TokenDelegator.TokenAmount[]",
        components: [
          { name: "from", type: "address", internalType: "address" },
          { name: "token", type: "address", internalType: "contract IERC20" },
          { name: "amountIn", type: "uint256", internalType: "uint256" },
        ],
      },
      { name: "args", type: "uint256[]", internalType: "uint256[]" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      { name: "_owner", type: "address", internalType: "address" },
      { name: "_spender", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approvals",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [{ name: "_user", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeAction",
    inputs: [{ name: "actionId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getPaymentById",
    inputs: [{ name: "actionId", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "contractAddress", type: "address", internalType: "address" },
      { name: "initialized", type: "bool", internalType: "bool" },
      {
        name: "tokensAmounts",
        type: "tuple[]",
        internalType: "struct TokenDelegator.TokenAmount[]",
        components: [
          { name: "from", type: "address", internalType: "address" },
          { name: "token", type: "address", internalType: "contract IERC20" },
          { name: "amountIn", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "payments",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "contractAddress", type: "address", internalType: "address" },
      { name: "initialized", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setActiveState",
    inputs: [
      { name: "actionId", type: "uint256", internalType: "uint256" },
      { name: "newIsActive", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapETHForTokens",
    inputs: [
      { name: "tokenOut", type: "address", internalType: "contract IERC20" },
      { name: "amountOutMin", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapTokensForETH",
    inputs: [
      { name: "tokenIn", type: "address", internalType: "contract IERC20" },
      { name: "amountIn", type: "uint256", internalType: "uint256" },
      { name: "amountOutMin", type: "uint256", internalType: "uint256" },
      { name: "_from", type: "address", internalType: "address" },
      { name: "to", type: "address", internalType: "address" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapTokensForTokens",
    inputs: [
      { name: "tokenIn", type: "address", internalType: "contract IERC20" },
      { name: "tokenOut", type: "address", internalType: "contract IERC20" },
      { name: "amountIn", type: "uint256", internalType: "uint256" },
      { name: "amountOutMin", type: "uint256", internalType: "uint256" },
      { name: "_from", type: "address", internalType: "address" },
      { name: "to", type: "address", internalType: "address" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferBatch",
    inputs: [
      {
        name: "transfers",
        type: "tuple[]",
        internalType: "struct TokenDelegator.Transfer[]",
        components: [
          { name: "token", type: "address", internalType: "contract IERC20" },
          { name: "from", type: "address", internalType: "address" },
          { name: "to", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferToken",
    inputs: [
      { name: "token", type: "address", internalType: "contract IERC20" },
      { name: "_from", type: "address", internalType: "address" },
      { name: "_to", type: "address", internalType: "address" },
      { name: "_amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "uniswapV2Router",
    inputs: [],
    outputs: [
      { name: "", type: "address", internalType: "contract IUniswapV2Router" },
    ],
    stateMutability: "view",
  },
] as const;
